/*root variables*/
/*use root as opposed to * because * selects everything individually and applies it to all of them, so each element sets its 
own copy of the variable, whereas root variables can be resued over and over in each element*/
/*root is overall more efficient and less redundant*/
:root {
  /*defines overall font for web app*/
  --font: -apple-system, BlinkMacSystemFont, "Avenir Next", Avenir,
    "Nimbus Sans L", Roboto, "Noto Sans", "Segoe UI", Arial, Helvetica,
    "Helvetica Neue", sans-serif;
  /*defines how rounded buttons will be on the site(bigger # means more rounded)*/
  --standard-border-radius: 20px;
  /*defines width(thickness) of borders across site*/
  --border-width: 3px;
  /*defines background color*/
  --bg-color: #cdeaf4;
  /*defines additional background color*/
  --accent-bg-color: #8abde9;
  /*defines text color*/
  --text-color: #212121;
  /*defines secondary text color - lighter gray for footers, etc*/
  --text-light: #585858;
  /*defines border color*/
  --border: #898ea4;
  /*defines highlight color, used for buttons, etc*/
  --highlight-color: #186bbf;
  /*defines color when people hover over highlighted elements*/
  --highlight-hover-color: #6e7683;
  /*defines the text color of highlighted elements, ex:text inside buttons*/
  --highlight-text-color: var(--bg-color);
}

/* reset and global elements*/
textarea,
input {
  /*removes default styling, lets you add your own css to everything, use webkit and moz for older computers*/
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

html {
  /*defines font for whole page using css variable defined in root*/
  font-family: var(--font);
  /*makes scrolling smooth, not jumping*/
  scroll-behavior: smooth;
}

body {
  color: var(--text-color);
  background-color: var(--bg-color);
  /*this turns the body into a grid format*/
  display: grid;
  /*this makes it split up into 3 columns, 1 fr means 1 fractional unit and they have it on the left and right */
  /*so basically the 1 fr keeps the left and right equal sizes, no matter screen size*/
  /*then the middle portion is the minimum of 720 px or 90% of the screen, so if 90% of the screen is bigger than 720, they use 720
  and keeps it so that on smaller screens, content can grow to 90% of viewport, overall this prevents overflow*/
  grid-template-columns: 1fr min(45rem, 90%) 1fr;
  /*this removes the deafult margin of the browser*/
  margin: 0;
  font-size: 20px;
  /*adds spacing between the lines*/
  line-height: 1.5;
}

/*this line means take everything that is a direct child of the body, and put it in grid column 2
as defined earlier, grid column 2 is min(720px, 90%), so it puts everything in this middle column*/
body > * {
  grid-column: 2;
}

/* header and footer */
header {
  background-color: var(--accent-bg-color);
  border-bottom: var(--border-width) solid var(--border);
  text-align: center;
  grid-column: 1 / -1;
  padding: 1rem;
}

/*styling the text in the header*/
header h2 {
  margin: 2.5rem;
}

footer {
  color: var(--text-light);
  text-align: center;
  border-top: var(--border-width) solid var(--border);
  grid-column:-1/1;
  margin-top: 4rem;
  padding: 2rem;
  font-size: 1.5rem;
}

/* typography */
h2 {
  margin-top: 1rem;
  font-size: 2.5rem;
}

p {
  margin: 1.5rem;
}

p,
h2 {
  /*this makes it so that if a word is too long it goes to the next line*/
  overflow-wrap: break-word;
}

h2,p{
  line-height: 1.1;
}

/*decreases big header font size if on a small screen so that it doesn't look too big*/
@media only screen and (width <= 720px) {
  h2 {
    font-size: 2rem;
  }
}

/* links and buttons */
a,
a:visited {
  color: var(--highlight-color);
  text-decoration:underline;
}

a:hover {
  text-decoration: none;
}

/*need to have this so it works for all buttons, the class of button that we used for edit post, and any buttons in links*/
button,
form button,
a.button {
  border: var(--border-width) solid var(--text-color);
  background-color: var(--highlight-color);
  color: var(--highlight-text-color);
  /*create big cute buttons!*/
  padding: 1rem;
  /*remove the link on the buttons*/
  text-decoration: none;
  /*adds space between buttons*/
  margin:0.2rem;
}

/*basically we need this second line of button not because we use an a tag with a type button which can't support diasbled*/
/*it means that it applies to anything with a class button that isn't disabled, when you hover over it*/
button:enabled:hover,
.button:hover{
  background-color: var(--highlight-hover-color);
  border-color: var(--highlight-hover-color);
  cursor: pointer;
}

/* navigation, needed because in header.ejs we have a navbar with a tags in it for the create post, log in and out  */
header nav {
  padding: 2rem;
  font-size: 1rem;
  line-height: 2;
}

/* layout components */
main {
  padding-top: 1.5rem;
}

[dir="rtl"] aside {
  float: left;
}

@media only screen and (width <= 720px) {
  aside {
    float: none;
    width: 100%;
    margin-inline-start: 0;
  }
}

/* content blocks */
article,
fieldset,
dialog {
  border: var(--border-width) solid var(--border);
  border-radius: var(--standard-border-radius);
  margin-bottom: 1rem;
  padding: 1rem;
}

/* forms and inputs */
textarea,
input,
button,
.button {
  font-size: inherit;
  border-radius: var(--standard-border-radius);
  max-width: 100%;
  margin-bottom: 0.5rem;
  padding: 0.5em;
  font-family: inherit;
}

textarea,
input {
  color: var(--text-color);
  background-color: var(--bg-color);
  border: var(--border-width) solid var(--border);
}

label {
  display: block;
}

textarea:not([cols]) {
  width: 90%;
}

/* miscellaneous */
@media only screen and (width <= 720px) {
  dialog {
    max-width: calc(100vw - 2rem);
  }
}